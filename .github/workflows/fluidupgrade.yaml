name: Upgrading fluid using helm

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_RAW }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl config get-contexts

      - name: Install AWS CLI
        run: |
          sudo apt update
          sudo apt install -y awscli

      - name: Configure AWS CLI for MinIO
        run: |
          mkdir -p ~/.aws
          cat <<EOF > ~/.aws/credentials
          [default]
          aws_access_key_id = ${{ secrets.MINIO_ACCESS_KEY }}
          aws_secret_access_key = ${{ secrets.MINIO_SECRET_KEY }}
          EOF

          cat <<EOF > ~/.aws/config
          [default]
          region = us-east-1
          output = json
          EOF

      - name: Backup PostgreSQL and upload to MinIO
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          FILE="cloud_backup_$TIMESTAMP.sql"
          kubectl exec -n fluid ccs-postgresql-cluster-0 -- \
            env PGPASSWORD="${{ secrets.POSTGRES_PASSWORD }}" pg_dump -U ccs cloud > $FILE
          aws --endpoint-url ${{ secrets.MINIO_ENDPOINT }} s3 cp $FILE s3://${{ secrets.MINIO_BUCKET }}/$FILE
          rm $FILE

      - name: Backup MongoDB and upload to MinIO
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          FILE="mongodb_backup_$TIMESTAMP.gz"
          kubectl exec -n fluid configdb-0 -- \
            mongodump --username sigma --password "${{ secrets.MONGO_PASSWORD }}" --authenticationDatabase admin --archive --gzip > $FILE
          aws --endpoint-url ${{ secrets.MINIO_ENDPOINT }} s3 cp $FILE s3://${{ secrets.MINIO_BUCKET }}/$FILE
          rm $FILE

      - name: Backup values.yaml and upload to MinIO
        working-directory: ./helm
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          FILE="values.yaml.$TIMESTAMP"
          cp values.yaml $FILE
          aws --endpoint-url ${{ secrets.MINIO_ENDPOINT }} s3 cp $FILE s3://${{ secrets.MINIO_BUCKET }}/$FILE
          rm $FILE

      - name: Helm registry login
        run: |
          helm registry login docker.io -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Helm dependency build
        working-directory: ./helm
        run: helm dependency build

      - name: Helm upgrade/install fluid chart
        working-directory: ./helm
        run: |
          helm upgrade --install fluid . -f values.yaml -n fluid --create-namespace
          helm list -A
