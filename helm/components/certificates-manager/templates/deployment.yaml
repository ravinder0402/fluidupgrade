apiVersion: apps/v1
kind: Deployment
metadata:
  name: certificates-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: certificates-manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: certificates-manager
  template:
    metadata: 
      labels:
        app: certificates-manager
    spec:
      dnsPolicy: ClusterFirst
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      initContainers:
      {{ include "helper.postgresql.pgready" . }}
      containers:
      - name: certificates-manager
        image: {{ .Values.global.repository }}/{{ .Values.image }}:{{ .Values.global.releaseTag }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        resources: 
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        envFrom:
        envFrom:
        - configMapRef:
            name: platform-api-config   
        - configMapRef:
            name: redis-config
        {{- if .Values.global.events.enabled }}
        - configMapRef:
            name: ccs-events-config
        {{- end }}
        - configMapRef:
            name: certificates-manager-config
        - secretRef:
            name: ccs-postgres-config
        - secretRef:
            name: ccs-auditdb-config
        env:
          - name: ENABLED_MODULES
            value: {{ .Values.enabledServices | quote }}     
          - name: POSTGRES_DB
            value: "cloud"
          - name: FLASK_CONFIG
            value: {{ .Values.global.flaskConfig }}
          - name: CACHING_ENABLED
            value: "false"
        volumeMounts:
          - name: platform-config
            readOnly: true
            mountPath: /etc/yntraa/
      volumes:
        - name: platform-config
          projected:
            sources:
            - secret:
                name: ccs-super-admin-config