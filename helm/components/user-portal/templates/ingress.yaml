# {{- if .Values.global.dnsEnabled }}
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: console-ingress
#   namespace: {{ .Release.Namespace }}
#   annotations:
#     ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/affinity: cookie
#     nginx.ingress.kubernetes.io/proxy-buffering: "off"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#     nginx.org/websocket-services: orbiter-auth
#     nginx.ingress.kubernetes.io/websocket-services: orbiter-auth
#     nginx.ingress.kubernetes.io/server-snippet: |
#       location /api/v1/swagger {
#             deny all;
#             return 403;
#         }
# spec:
#   ingressClassName: {{ .Values.global.ingressClass }}
#   rules:
#     - host: {{ .Values.ingress.hostname }}
#       http:
#         paths:
#           - backend:
#               service:
#                 name: orbiter-auth
#                 port:
#                   number: 8060
#             path: /api
#             pathType: Prefix
#           - backend:
#               service:
#                 name: orbiter-auth
#                 port:
#                   number: 8060
#             path: /socket
#             pathType: Prefix
#           - backend:
#               service:
#                 name: console
#                 port:
#                   number: 80
#             path: /
#             pathType: Prefix
#   tls:
#     - hosts:
#         - {{ .Values.ingress.hostname }}
#       {{ if eq .Values.global.https.tlsSecret "" }}
#       secretName: {{ .Values.ingress.tlsSecret }}
#       {{- else }}
#       secretName: {{ .Values.global.https.tlsSecret }}
#       {{- end }}
# {{- end }}