apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-management-service
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount.tenantManagementService }}
  selector:
    matchLabels:
      app: tenant-management-service
  template:
    metadata:
      labels:
        app: tenant-management-service
    spec:
      serviceAccountName: compass-controller
      initContainers:
      - name: mongodb-wait
        image: {{ .Values.global.repository }}/mongo:5.0.3
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          while true; do
            mongosh --host $MONGODB_SERVICE_SERVICE_HOST -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval "rs.status()"
            if [ $? == "0" ]; then
              exit 0
            fi
            echo "waiting for mongodb to start"
            sleep 5
          done
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: configdb-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: configdb-secret
              key: password
        - name: MONGODB_SERVICE_SERVICE_HOST
          value: "compass-configdb"
      containers:
      - name: tenant-management-service
        image: {{ .Values.global.repository }}/tenant-management-service:{{ include "helper.imageTag" . }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8090
          name: grpc
          protocol: TCP
        env:
        - name: MONGO_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: configdb-secret
              key: username
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: configdb-secret
              key: password
        {{- if .Values.global.proxy.enabled }}
        - name: HTTP_PROXY_URL
          value: {{ .Values.global.proxy.http_proxy | quote }}
        - name: HTTPS_PROXY_URL
          value: {{ .Values.global.proxy.http_proxy | quote }}
        {{- end }}
        volumeMounts:
        - name: tenant-management-service-vol
          mountPath: /opt/config.yml
          subPath: config.yml
      imagePullSecrets:
      - name: {{ .Release.Name }}-docker-registry-key
      dnsPolicy: ClusterFirst
      volumes:
      - name: tenant-management-service-vol
        configMap:
          name: tenant-management-service-config
