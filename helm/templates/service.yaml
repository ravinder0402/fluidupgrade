apiVersion: v1
kind: Service
metadata:
  name: compass-configdb
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- if .Values.configDB.metrics.enabled }}
    prometheus.io/path: /metrics
    prometheus.io/port: '9216'
    prometheus.io/scrape: 'true'
  {{- end }}
spec:
  type: {{ .Values.configDB.service.type }}
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
      protocol: TCP
    {{- if .Values.configDB.metrics.enabled }}
    - name: metrics
      port: 9216
      protocol: TCP
      targetPort: 9216
    {{- end }}
  selector:
      app: configdb
---
apiVersion: v1
kind: Service
metadata:
  name: configdb
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
      app: configdb
---
apiVersion: v1
kind: Service
metadata:
  name: compass-metricsdb
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- if .Values.configDB.metrics.enabled }}
    prometheus.io/path: /metrics
    prometheus.io/port: '9216'
    prometheus.io/scrape: 'true'
  {{- end }}
spec:
  type: {{ .Values.metricsDB.service.type }}
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
      protocol: TCP
    {{- if .Values.metricsDB.metrics.enabled }}
    - name: metrics
      port: 9216
      protocol: TCP
      targetPort: 9216
    {{- end }}
  selector:
      app: metricsdb
---
apiVersion: v1
kind: Service
metadata:
  name: metricsdb
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
      app: metricsdb
---
apiVersion: v1
kind: Service
metadata:
  name: compass-api
  namespace: {{ .Release.Namespace }}
  labels:
    app: compass-api
spec:
  ports:
    - name: ingress
      port: 8070
      targetPort: 8070
    - name: central-ingress
      port: 8071
      targetPort: 8071
    - name: provider
      port: 8061
      targetPort: 8061
    - port: 6443
      name: kubectl
      targetPort: 6443
    - port: 8085
      name: insecure-api
      targetPort: 8085
    - name: websocket
      port: 9080
      targetPort: 9080
    - name: insecure-central-ingress
      port: 8080
      targetPort: 8080
    - name: grafana
      port: 8081
      targetPort: 8081
  selector:
    app: compass-api
---
apiVersion: v1
kind: Service
metadata:
  name: compass-controller
  namespace: {{ .Release.Namespace }}
{{- if eq "AWS" .Values.global.environment }}
{{- if not .Values.global.proxyProtocol.enabled  }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
{{- end }}
{{- end }}
  labels:
    app: compass-controller
spec:
  ports:
    - port: 8030
      name: bootstrap
      targetPort: 8030
      protocol: TCP
    - port: 8040
      name: controller
      targetPort: 8040
      protocol: TCP
  selector:
    app: compass-controller
{{- if not .Values.global.dnsEnabled  }}
  type: NodePort
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: compass-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    app: compass-controller
spec:
  ports:
    - port: 443
      name: ingress
      targetPort: 6443
      protocol: TCP
  selector:
    app: compass-controller
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: compass-orchestrator
  namespace: {{ .Release.Namespace }}
  labels:
    app: compass-orchestrator
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
    - port: 8081
      name: http-internal-ccp
      targetPort: 8081
  selector:
    app: compass-orchestrator
---
apiVersion: v1
kind: Service
metadata:
  name: compass-term
  namespace: {{ .Release.Namespace }}
  labels:
    app: compass-term
spec:
  type: ClusterIP
  ports:
    - name: websocket
      port: 8000
      targetPort: 8000
    - name: robin-websocket
      port: 8001
      targetPort: 8001
  selector:
    app: compass-term
---
apiVersion: v1
kind: Service
metadata:
  name: internal-cluster-api
  namespace: {{ .Release.Namespace }}
  labels:
    app: internal-cluster-api
spec:
  type: ClusterIP
  ports:
    - port: 7080
      targetPort: 7080
      name: http
  selector:
    app: kg-cluster-notifier
---
apiVersion: v1
kind: Service
metadata:
  name: metric-server
  namespace: {{ .Release.Namespace }}
  annotations:
    prometheus.io/path: metrics
    prometheus.io/port: "9100"
    prometheus.io/scrape: "true"
  labels:
    app: compass-metric-server
spec:
  ports:
    - port: 9100
      name: metric
      targetPort: 9100
  selector:
    app: compass-metric-server
{{- if .Values.global.clusterManager.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: compass-cluster-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: compass-cluster-manager
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: internalgrpc
      port: 8070
      targetPort: 8070
    - name: slurmrest
      port: 8085
      targetPort: 8085
    - name: container-kubeapi
      port: 8060
      targetPort: 8060
  selector:
    app: compass-cluster-manager
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: notification-store
spec:
  type: ClusterIP
  ports:
    - port: 6380
      targetPort: 6379
      protocol: TCP
  selector:
      app: notification-store
---
{{- if not .Values.global.postgresql.external.host }}
apiVersion: v1
kind: Service
metadata:
  name: ccs-postgres
  labels:
    app: ccs-postgres
spec:
  type: ClusterIP
  selector:
    app: ccs-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: sockets-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: sockets-server
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
      app: sockets-server