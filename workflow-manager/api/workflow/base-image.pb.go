// Copyright 2024, Coredge.io Inc.
// All Rights reserved.
//
// Author Prabhjot Singh Sethi (prabhjot@coredge.io)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: base-image.proto

package workflow

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseImagesListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// domain under consideration
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *BaseImagesListReq) Reset() {
	*x = BaseImagesListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImagesListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImagesListReq) ProtoMessage() {}

func (x *BaseImagesListReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImagesListReq.ProtoReflect.Descriptor instead.
func (*BaseImagesListReq) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{0}
}

func (x *BaseImagesListReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type BaseImagesVersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version identifier of the image
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// description for the image
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// base image id to be used
	ImageId string `protobuf:"bytes,3,opt,name=imageId,proto3" json:"imageId,omitempty"`
	// external reference for the image
	ExtRef string `protobuf:"bytes,4,opt,name=extRef,proto3" json:"extRef,omitempty"`
}

func (x *BaseImagesVersionInfo) Reset() {
	*x = BaseImagesVersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImagesVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImagesVersionInfo) ProtoMessage() {}

func (x *BaseImagesVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImagesVersionInfo.ProtoReflect.Descriptor instead.
func (*BaseImagesVersionInfo) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{1}
}

func (x *BaseImagesVersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BaseImagesVersionInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BaseImagesVersionInfo) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *BaseImagesVersionInfo) GetExtRef() string {
	if x != nil {
		return x.ExtRef
	}
	return ""
}

type BaseImagesListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the image
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// list of supported versions for this image
	Versions []*BaseImagesVersionInfo `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *BaseImagesListEntry) Reset() {
	*x = BaseImagesListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImagesListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImagesListEntry) ProtoMessage() {}

func (x *BaseImagesListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImagesListEntry.ProtoReflect.Descriptor instead.
func (*BaseImagesListEntry) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{2}
}

func (x *BaseImagesListEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseImagesListEntry) GetVersions() []*BaseImagesVersionInfo {
	if x != nil {
		return x.Versions
	}
	return nil
}

type BaseImagesListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of items available in the response
	Items []*BaseImagesListEntry `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BaseImagesListResp) Reset() {
	*x = BaseImagesListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImagesListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImagesListResp) ProtoMessage() {}

func (x *BaseImagesListResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImagesListResp.ProtoReflect.Descriptor instead.
func (*BaseImagesListResp) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{3}
}

func (x *BaseImagesListResp) GetItems() []*BaseImagesListEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

type BaseImageAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// domain under consideration
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// name of the base image
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// version of the base image
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// description
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// external reference of the image to be used
	ExtRef string `protobuf:"bytes,5,opt,name=extRef,proto3" json:"extRef,omitempty"`
}

func (x *BaseImageAddReq) Reset() {
	*x = BaseImageAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImageAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImageAddReq) ProtoMessage() {}

func (x *BaseImageAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImageAddReq.ProtoReflect.Descriptor instead.
func (*BaseImageAddReq) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{4}
}

func (x *BaseImageAddReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *BaseImageAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseImageAddReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BaseImageAddReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BaseImageAddReq) GetExtRef() string {
	if x != nil {
		return x.ExtRef
	}
	return ""
}

type BaseImageAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaseImageAddResp) Reset() {
	*x = BaseImageAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImageAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImageAddResp) ProtoMessage() {}

func (x *BaseImageAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImageAddResp.ProtoReflect.Descriptor instead.
func (*BaseImageAddResp) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{5}
}

type BaseImageDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// domain under consideration
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// name of the base image
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// version of the base image
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BaseImageDelReq) Reset() {
	*x = BaseImageDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImageDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImageDelReq) ProtoMessage() {}

func (x *BaseImageDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImageDelReq.ProtoReflect.Descriptor instead.
func (*BaseImageDelReq) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{6}
}

func (x *BaseImageDelReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *BaseImageDelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseImageDelReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type BaseImageDelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaseImageDelResp) Reset() {
	*x = BaseImageDelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseImageDelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseImageDelResp) ProtoMessage() {}

func (x *BaseImageDelResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseImageDelResp.ProtoReflect.Descriptor instead.
func (*BaseImageDelResp) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{7}
}

type ProjectBaseImagesListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// domain under consideration
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// project under consideration
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ProjectBaseImagesListReq) Reset() {
	*x = ProjectBaseImagesListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_image_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectBaseImagesListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectBaseImagesListReq) ProtoMessage() {}

func (x *ProjectBaseImagesListReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_image_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectBaseImagesListReq.ProtoReflect.Descriptor instead.
func (*ProjectBaseImagesListReq) Descriptor() ([]byte, []int) {
	return file_base_image_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectBaseImagesListReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ProjectBaseImagesListReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

var File_base_image_proto protoreflect.FileDescriptor

var file_base_image_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x11, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x77, 0x0a, 0x15, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x52, 0x65, 0x66,
	0x22, 0x66, 0x0a, 0x13, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x52, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x52, 0x65, 0x66, 0x22, 0x12, 0x0a, 0x10, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x57, 0x0a,
	0x0f, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4c, 0x0a, 0x18, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x32, 0xde, 0x04, 0x0a, 0x0c, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12,
	0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x7d, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x8c, 0x01,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x22, 0x3a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x19, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x2a,
	0x44, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x7d, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x12, 0xa1, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x8c, 0x01, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x67, 0x65,
	0x69, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x92, 0x41, 0x55, 0x12, 0x20, 0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x20,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x41, 0x50, 0x49, 0x20, 0x73, 0x70, 0x65, 0x63,
	0x32, 0x03, 0x31, 0x2e, 0x30, 0x72, 0x31, 0x0a, 0x2f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x61, 0x70, 0x69, 0x20, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x43, 0x6f, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_image_proto_rawDescOnce sync.Once
	file_base_image_proto_rawDescData = file_base_image_proto_rawDesc
)

func file_base_image_proto_rawDescGZIP() []byte {
	file_base_image_proto_rawDescOnce.Do(func() {
		file_base_image_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_image_proto_rawDescData)
	})
	return file_base_image_proto_rawDescData
}

var file_base_image_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_base_image_proto_goTypes = []interface{}{
	(*BaseImagesListReq)(nil),        // 0: workflow.BaseImagesListReq
	(*BaseImagesVersionInfo)(nil),    // 1: workflow.BaseImagesVersionInfo
	(*BaseImagesListEntry)(nil),      // 2: workflow.BaseImagesListEntry
	(*BaseImagesListResp)(nil),       // 3: workflow.BaseImagesListResp
	(*BaseImageAddReq)(nil),          // 4: workflow.BaseImageAddReq
	(*BaseImageAddResp)(nil),         // 5: workflow.BaseImageAddResp
	(*BaseImageDelReq)(nil),          // 6: workflow.BaseImageDelReq
	(*BaseImageDelResp)(nil),         // 7: workflow.BaseImageDelResp
	(*ProjectBaseImagesListReq)(nil), // 8: workflow.ProjectBaseImagesListReq
}
var file_base_image_proto_depIdxs = []int32{
	1, // 0: workflow.BaseImagesListEntry.versions:type_name -> workflow.BaseImagesVersionInfo
	2, // 1: workflow.BaseImagesListResp.items:type_name -> workflow.BaseImagesListEntry
	0, // 2: workflow.BaseImageApi.ListBaseImages:input_type -> workflow.BaseImagesListReq
	4, // 3: workflow.BaseImageApi.AddBaseImage:input_type -> workflow.BaseImageAddReq
	6, // 4: workflow.BaseImageApi.DeleteBaseImage:input_type -> workflow.BaseImageDelReq
	8, // 5: workflow.BaseImageApi.ListProjectBaseImages:input_type -> workflow.ProjectBaseImagesListReq
	3, // 6: workflow.BaseImageApi.ListBaseImages:output_type -> workflow.BaseImagesListResp
	5, // 7: workflow.BaseImageApi.AddBaseImage:output_type -> workflow.BaseImageAddResp
	7, // 8: workflow.BaseImageApi.DeleteBaseImage:output_type -> workflow.BaseImageDelResp
	3, // 9: workflow.BaseImageApi.ListProjectBaseImages:output_type -> workflow.BaseImagesListResp
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_base_image_proto_init() }
func file_base_image_proto_init() {
	if File_base_image_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_image_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImagesListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImagesVersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImagesListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImagesListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImageAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImageAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImageDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseImageDelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_image_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectBaseImagesListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_image_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_base_image_proto_goTypes,
		DependencyIndexes: file_base_image_proto_depIdxs,
		MessageInfos:      file_base_image_proto_msgTypes,
	}.Build()
	File_base_image_proto = out.File
	file_base_image_proto_rawDesc = nil
	file_base_image_proto_goTypes = nil
	file_base_image_proto_depIdxs = nil
}
